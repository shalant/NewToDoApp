@page "/todoitem/{id:int}"
@page "/details/{id:int}"
@page "/todoitem/details/{id:int}"
@using NewToDoApp.Models
@using Microsoft.EntityFrameworkCore

@inject IToDoService _todoService
@rendermode @(new InteractiveAutoRenderMode(prerender: false))

<h3>Details</h3>

@if(todoItem == null){
    <p>Loading...</p>
}
else
{
    <h5>ID: @todoItem.Id</h5>
    <h5>Name: @todoItem.Name</h5>
    <label for="iscomplete" class="form-label">Is Complete:</label>
    <InputCheckbox readonly id="iscomplete" @bind-Value="todoItem.IsComplete" class="form-check-input" />
    <p>Short description: @todoItem.ShortDescription</p>
}
<MudButton href="@($"/todoitem/update/{todoItem!.Id}")" Variant="Variant.Filled" Color="Color.Success" class="me-3">Edit</MudButton>
<div class="mt-2">
    <a href="/todoitems">Back to List</a>
</div>

    
@code {
    private TodoItem todoItem = null;
    private string message = string.Empty;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        message = "Loading ToDo Item";
        var result = await _todoService.GetTodoItemById(Id);

        if (!result.Success)
        {
            message = result.Message;
        }
        else
        {
            todoItem = result.Data;
        }
    }

}
